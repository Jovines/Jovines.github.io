{"title":"安卓Drawable","date":"2019-11-25T09:00:00.000Z","author":"Jon","link":"2019/11/25/安卓Drawable","comments":true,"tags":["新知识"],"categories":["android"],"updated":"2019-11-25T09:02:17.253Z","content":"<p>Android Drawable 相信大家都不陌生，本篇我们就来全面深入了解它，Drawable是一种可以在Canvas上进行绘制的抽象的图像，它的子类也相当多，所以在开发中很容易导致我们对不同Drawable的理解产生混乱，因此我们很有必要来全面了解一下Drawable的子类及其使用方式滴，哈~。</p>\n<h2 id=\"一、Drawable的简述\">一、Drawable的简述<a href=\"2019/11/25/安卓Drawable#一、Drawable的简述\"></a></h2><p>  Drawable在我们开发中常被用来作为View的背景图像，一般情况下我们都是通过XML来定义Drawable的，当然我们也可以通过代码创建Drawable，只不过会比较复杂而已。Drawable最大的好处就是可以方便我们做出一些特殊的UI效果，这点比我们自定义View实现的效果来得更容易些。因此深入理解Drawable的用法还是很有必要的，接下来我们来看看Drawable的一些特性：</p>\n<ul>\n<li>1、Drawable本身表示的只是一种图像的概念，因此Drawable不仅仅是图片，也可以是颜色构造出来的图像效果（后面会说明）。</li>\n<li>2、Drawable本身是一个抽象类，因此具体的实现都是由子类完成的，比如ShapeDrawable，BitmapDrawable等。</li>\n<li>3、Drawable的内部宽高可以分别通过getIntrinsicWidth()和getIntrinsicHeight()获取，但并不是所有的Drawable都有内部宽高的属性，比如一个颜色形成的Drawable并没有宽高的概念。在大多数情况下，Drawable并没有大小的概念，因为当Drawable作为View的背景图时，Drawable会被拉伸至View的同等大小。</li>\n</ul>\n<h2 id=\"二、千变万化的Drawable\">二、千变万化的Drawable<a href=\"2019/11/25/安卓Drawable#二、千变万化的Drawable\"></a></h2><h4 id=\"1、BitmapDrawable\">1、BitmapDrawable<a href=\"2019/11/25/安卓Drawable#1、BitmapDrawable\"></a></h4><p>  BitmapDrawable 是对bitmap的一种包装，可以设置它包装的bitmap在BitmapDrawable区域内的绘制方式，如平铺填充、拉伸填充或者保持图片原始大小，也可以在BitmapDrawable区域内部使用gravity指定的对齐方式。其语法如下：</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bitmap</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">xmlns:android</span>=<span class=\"string\">\"http://schemas.android.com/apk/res/android\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:src</span>=<span class=\"string\">\"@[package:]drawable/drawable_resource\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:antialias</span>=<span class=\"string\">[</span>\"<span class=\"attr\">true</span>\" | \"<span class=\"attr\">false</span>\"]</span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:dither</span>=<span class=\"string\">[</span>\"<span class=\"attr\">true</span>\" | \"<span class=\"attr\">false</span>\"]</span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:filter</span>=<span class=\"string\">[</span>\"<span class=\"attr\">true</span>\" | \"<span class=\"attr\">false</span>\"]</span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:gravity</span>=<span class=\"string\">[</span>\"<span class=\"attr\">top</span>\" | \"<span class=\"attr\">bottom</span>\" | \"<span class=\"attr\">left</span>\" | \"<span class=\"attr\">right</span>\" | \"<span class=\"attr\">center_vertical</span>\" |</span></span><br><span class=\"line\"><span class=\"tag\">                      \"<span class=\"attr\">fill_vertical</span>\" | \"<span class=\"attr\">center_horizontal</span>\" | \"<span class=\"attr\">fill_horizontal</span>\" |</span></span><br><span class=\"line\"><span class=\"tag\">                      \"<span class=\"attr\">center</span>\" | \"<span class=\"attr\">fill</span>\" | \"<span class=\"attr\">clip_vertical</span>\" | \"<span class=\"attr\">clip_horizontal</span>\"]</span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:tileMode</span>=<span class=\"string\">[</span>\"<span class=\"attr\">disabled</span>\" | \"<span class=\"attr\">clamp</span>\" | \"<span class=\"attr\">repeat</span>\" | \"<span class=\"attr\">mirror</span>\"] </span></span><br><span class=\"line\"><span class=\"tag\">     /&gt;</span>123456789101112</span><br></pre></td></tr></table></div></figure>\n\n<p>我们分析一下这些属性的含义：<br><strong>android:src</strong><br>  类型：Drawable resource。必需。 引用一个drawable resource.<br><strong>android:antialias</strong><br>  类型：Boolean。是否开启抗锯齿。开启后图片会变得更平滑些，因此一般建议开启，设置为true即可。<br><strong>android:dither</strong><br>  类型：Boolean。是否允许抖动，如果位图与屏幕的像素配置不同时，开启这个选项可以让高质量的图片在低质量的屏幕上保持较好的显示效果（例如：一个位图的像素设置是 ARGB 8888，但屏幕的设置是RGB 565，开启这个选项可以是图片不过于失真）一般建议开启，为true即可。<br><strong>android:filter</strong><br>  类型：Boolean。是否允许对位图进行滤波。当图片被压缩或者拉伸时，使用滤波可以获得平滑的外观效果。一般建议开启，为true即可<br><strong>android:gravity</strong><br>  当图片小于容器尺寸时，设置此选项可以对图片经典定位，这个属性比较多，不同选项可以使用‘|’来组合使用。</p>\n<div class=\"article-bounded\"><div class=\"article-table\"><table>\n<thead>\n<tr>\n<th>可选项</th>\n<th>含义</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>top</td>\n<td>将图片放在容器顶部，不改变图片大小</td>\n</tr>\n<tr>\n<td>bottom</td>\n<td>将图片放在容器底部，不改变图片大小</td>\n</tr>\n<tr>\n<td>left</td>\n<td>将图片放在容器左侧，不改变图片大小</td>\n</tr>\n<tr>\n<td>right</td>\n<td>将图片放在容器右侧，不改变图片大小</td>\n</tr>\n<tr>\n<td>center_vertical</td>\n<td>图片竖直居中，不改变图片大小</td>\n</tr>\n<tr>\n<td>fill_vertical</td>\n<td>图片竖直方向填充容器</td>\n</tr>\n<tr>\n<td>center_horizontal</td>\n<td>图片水平居中，不改变图片大小</td>\n</tr>\n<tr>\n<td>fill_horizontal</td>\n<td>图片水平方向填充容器</td>\n</tr>\n<tr>\n<td>center</td>\n<td>使图片在水平方向和竖直方向同时居中，不改变图片大小</td>\n</tr>\n<tr>\n<td>fill</td>\n<td>图片填充容器，默认值</td>\n</tr>\n<tr>\n<td>clip_vertical</td>\n<td>竖直方向剪切，很少使用</td>\n</tr>\n<tr>\n<td>clip_horizontal</td>\n<td>水平方向剪切，很少使用</td>\n</tr>\n</tbody></table></div></div>\n<p><strong>android:mipMap</strong><br>  纹理映射处理技术，不太懂，不过一般也不用，默认为false<br><strong>android:tileMode</strong><br>  平铺模式。共有以下几个值<br>  disabled ：默认值，表示不使用平铺<br>  clamp ：复制边缘色彩<br>  repeat ：X、Y 轴进行重复图片显示，也就是我们说要说的平铺<br>  mirror ：在水平和垂直方向上使用交替镜像的方式重复图片的绘制<br>  三者区别如下图：<br><img src=\"/2019/11/25/安卓Drawable/20160814223852655.png\" alt=\"img\"><br>  BitmapDrawable的xml使用方式比较简单，我们这里就不贴案例了哈。接下来我们来看看在代码中如何使用BitmapDrawable。<br><img src=\"/2019/11/25/安卓Drawable/20160817080954451.png\" alt=\"img\"><br>  实际上我们从BitmapDrawable的源码可以看出，目前Google建议我们创建BitmapDrawable的构造方法有3种</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public BitmapDrawable(Resources res, Bitmap bitmap) </span><br><span class=\"line\"></span><br><span class=\"line\">public BitmapDrawable(Resources res, String filepath)</span><br><span class=\"line\"></span><br><span class=\"line\">public BitmapDrawable(Resources res, java.io.InputStream is)12345</span><br></pre></td></tr></table></div></figure>\n\n<p>  参数比较简单，res就是我们通过getResource()获取到的资源管理对象，bitmap就是我们需要用BitmapDrawable包装的图片对象，filepath，需要包装的图片所在路径，is则是一个图像流，需要转换成 BitmapDrawable。但是在大多数情况下我们还是建议使用xml实现比较好，代码实现我们不打算深究，我们这里直接给出一个代码应用案例：</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Bitmap mBitmap = BitmapFactory.decodeResource(getResources(), R.drawable.image1);</span><br><span class=\"line\">BitmapDrawable mBitmapDrawable = <span class=\"keyword\">new</span> BitmapDrawable(getResources()，mBitmap);</span><br><span class=\"line\">mBitmapDrawable.setTileModeXY(TileMode.MIRROR, TileMode.MIRROR);<span class=\"comment\">//平铺方式</span></span><br><span class=\"line\">mBitmapDrawable.setAntiAlias(<span class=\"keyword\">true</span>);<span class=\"comment\">//抗锯齿</span></span><br><span class=\"line\">mBitmapDrawable.setDither(<span class=\"keyword\">true</span>);<span class=\"comment\">//防抖动</span></span><br><span class=\"line\"><span class=\"comment\">//设置到imageView上即可</span></span><br><span class=\"line\">imageView.setImageDrawable(mBitmapDrawable);<span class=\"number\">1234567</span></span><br></pre></td></tr></table></div></figure>\n\n<h4 id=\"2、NinePatchDrawable\">2、NinePatchDrawable<a href=\"2019/11/25/安卓Drawable#2、NinePatchDrawable\"></a></h4><p>  NinePatchDrawable表示的是我们熟悉的.9格式的图片，.9图片可以在保证图片不失真的情况下任意进行缩放，在实际的使用中我们也是通过Xml来实现即可：</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">nine-patch</span> <span class=\"attr\">xmlns:android</span>=<span class=\"string\">\"http://schemas.android.com/apk/res/android\"</span>   </span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:src</span>=<span class=\"string\">\"drawable/resource\"</span>  </span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:dither</span>=<span class=\"string\">\"[true|false]\"</span>/&gt;</span>  123</span><br></pre></td></tr></table></div></figure>\n\n<p>  属性和BitmapDrawable中属性的含义相同，这里不过多描述。一般情况下不建议代码创建.9图，因为Android虽然可以使用Java代码创建NinePatchDrawable，但是极少情况会那么做，这是因为由于Android SDK会在编译工程时对点九图片进行编译，形成特殊格式的图片。使用代码创建NinePatchDrawable时只能针对编译过的点九图片资源，对于没有编译过的点九图片资源都当做BitmapDrawable对待。还有点需要特别注意的是，点九图只能适用于拉伸的情况，对于压缩的情况并不适用，如果需要适配很多分辨率的屏幕时需要把点九图做的小一点。</p>\n<h4 id=\"3、ShapeDrawable\">3、ShapeDrawable<a href=\"2019/11/25/安卓Drawable#3、ShapeDrawable\"></a></h4><p>  ShapeDrawable对于Xml的shape标签，在实际开发中我们经常将其作为背景图片使用，因为ShapeDrawable可以帮助我们通过颜色来构造图片，也可以构造渐变效果的图片，总之，ShapeDrawable足矣满足我们大部分特殊需求下面我们说说其使用方法：</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">shape</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">xmlns:android</span>=<span class=\"string\">\"http://schemas.android.com/apk/res/android\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:shape</span>=<span class=\"string\">[</span>\"<span class=\"attr\">rectangle</span>\" | \"<span class=\"attr\">oval</span>\" | \"<span class=\"attr\">line</span>\" | \"<span class=\"attr\">ring</span>\"] &gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">corners</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:radius</span>=<span class=\"string\">\"integer\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:topLeftRadius</span>=<span class=\"string\">\"integer\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:topRightRadius</span>=<span class=\"string\">\"integer\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:bottomLeftRadius</span>=<span class=\"string\">\"integer\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:bottomRightRadius</span>=<span class=\"string\">\"integer\"</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">gradient</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:angle</span>=<span class=\"string\">\"integer\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:centerX</span>=<span class=\"string\">\"integer\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:centerY</span>=<span class=\"string\">\"integer\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:centerColor</span>=<span class=\"string\">\"integer\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:endColor</span>=<span class=\"string\">\"color\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:gradientRadius</span>=<span class=\"string\">\"integer\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:startColor</span>=<span class=\"string\">\"color\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:type</span>=<span class=\"string\">[</span>\"<span class=\"attr\">linear</span>\" | \"<span class=\"attr\">radial</span>\" | \"<span class=\"attr\">sweep</span>\"]</span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:usesLevel</span>=<span class=\"string\">[</span>\"<span class=\"attr\">true</span>\" | \"<span class=\"attr\">false</span>\"] /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">padding</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:left</span>=<span class=\"string\">\"integer\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:top</span>=<span class=\"string\">\"integer\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:right</span>=<span class=\"string\">\"integer\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:bottom</span>=<span class=\"string\">\"integer\"</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">size</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:width</span>=<span class=\"string\">\"integer\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:height</span>=<span class=\"string\">\"integer\"</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">solid</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:color</span>=<span class=\"string\">\"color\"</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">stroke</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:width</span>=<span class=\"string\">\"integer\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:color</span>=<span class=\"string\">\"color\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:dashWidth</span>=<span class=\"string\">\"integer\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:dashGap</span>=<span class=\"string\">\"integer\"</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">shape</span>&gt;</span>123456789101112131415161718192021222324252627282930313233343536</span><br></pre></td></tr></table></div></figure>\n\n<p>  从代码中我们可以看出Shape的子元素包括、<gradient>、<padding>、<size>、<solid>、<stroke>，我们一个个分析。<br><strong>android:shape</strong><br>  这个属性表示图像的形状，可以是rectangle（矩形）、oval（椭圆）、line（横线）、ring（圆环）。默认为rectangle。<br>这里对于ring值还有几个相关的属性：</stroke></solid></size></padding></gradient></p>\n<div class=\"article-bounded\"><div class=\"article-table\"><table>\n<thead>\n<tr>\n<th>属性</th>\n<th>含义</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>android:innerRadius</td>\n<td>圆环的半径与android:innerRadiusRatio同时存在时，以android:innerRadius 为准</td>\n</tr>\n<tr>\n<td>android:innerRadiusRatio</td>\n<td>内半径占整个Drawable宽度的比例，默认值为9.如果为n，那么半径=宽度/n</td>\n</tr>\n<tr>\n<td>android:thickness</td>\n<td>圆环的厚度，即外半径减去内半径的大小与android：thicknessRatio同时存在时以android:thickness为准</td>\n</tr>\n<tr>\n<td>android：thicknessRatio</td>\n<td>厚度占整个Drawable宽度比例，默认值为3，如果为n，那么厚度=宽度/n</td>\n</tr>\n<tr>\n<td>android:useLevel</td>\n<td>一般都应该使用false，否则可能无法达到预期显示效果，除非它被当做LevelListDrawable来使用。</td>\n</tr>\n</tbody></table></div></div>\n<hr>\n<p>  指定边角的半径，数值越大角越圆，数值越小越趋近于直角，参数为：</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">corners</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"attr\">android:radius</span>=<span class=\"string\">\"integer\"</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"attr\">android:topLeftRadius</span>=<span class=\"string\">\"integer\"</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"attr\">android:topRightRadius</span>=<span class=\"string\">\"integer\"</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"attr\">android:bottomLeftRadius</span>=<span class=\"string\">\"integer\"</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"attr\">android:bottomRightRadius</span>=<span class=\"string\">\"integer\"</span> /&gt;</span>123456</span><br></pre></td></tr></table></div></figure>\n\n<p>   Android:radius直接指定4个角的半径，另外4个属性可以单独设置4个角的角度.</p>\n<hr>\n<p>  设置颜色渐变与<solid>为互斥标签，因为solid表示纯色填充，而gradient表示渐变填充。</solid></p>\n<div class=\"article-bounded\"><div class=\"article-table\"><table>\n<thead>\n<tr>\n<th>属性</th>\n<th>含义</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>android:angle</td>\n<td>渐变的角度，默认为0，其值务必为45°的倍数，0表示从左到右，90表示从下到上。</td>\n</tr>\n<tr>\n<td>android:centerX</td>\n<td>渐变中心点的横坐标</td>\n</tr>\n<tr>\n<td>android:centerY</td>\n<td>渐变的中心点的纵坐标，渐变中心点会影响渐变的具体效果。</td>\n</tr>\n<tr>\n<td>android:startColor</td>\n<td>渐变的开始颜色</td>\n</tr>\n<tr>\n<td>android:centerColor</td>\n<td>渐变的中间颜色</td>\n</tr>\n<tr>\n<td>android:endColor</td>\n<td>渐变的结束颜色</td>\n</tr>\n<tr>\n<td>android:gradientRadius</td>\n<td>渐变的半径，当android:type=”radial”有效</td>\n</tr>\n<tr>\n<td>android:useLevel</td>\n<td>一般为false</td>\n</tr>\n<tr>\n<td>android:type</td>\n<td>渐变类别，linear(线性)为默认值，radial（径内渐变），sweep（扫描渐变）</td>\n</tr>\n</tbody></table></div></div>\n<p>  angle=0和angle=90的区别(都为线性渐变)：<br><img src=\"/2019/11/25/安卓Drawable/20160817223030536.png\" alt=\"img\"><br>  linear(线性)为默认值，radial（径内渐变），sweep（扫描渐变）区别如下：<br><img src=\"/2019/11/25/安卓Drawable/20160817224001080.png\" alt=\"img\"><br>  到这里我们利用前面的介绍的知识点来实现一个环形进度圈的案例，我们将shape属性设置为ring（圆环），然后再设置其内半径以及环的厚度，并设置渐变色调，shape_drawable.xml代码如下：</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">shape</span> <span class=\"attr\">xmlns:android</span>=<span class=\"string\">\"http://schemas.android.com/apk/res/android\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:innerRadius</span>=<span class=\"string\">\"20dp\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:shape</span>=<span class=\"string\">\"ring\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:thickness</span>=<span class=\"string\">\"8dp\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:useLevel</span>=<span class=\"string\">\"false\"</span> &gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">gradient</span> <span class=\"attr\">android:angle</span>=<span class=\"string\">\"0\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:startColor</span>=<span class=\"string\">\"@color/normal\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:centerColor</span>=<span class=\"string\">\"#5027844F\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:endColor</span>=<span class=\"string\">\"#fff\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:useLevel</span>=<span class=\"string\">\"false\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:type</span>=<span class=\"string\">\"sweep\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">shape</span>&gt;</span>123456789101112131415</span><br></pre></td></tr></table></div></figure>\n\n<p>效果如下：<br><img src=\"/2019/11/25/安卓Drawable/20160817215859953.png\" alt=\"img\"><br>接着，我们将该自定义环形圈设置给一个旋转动画，并利用该旋转动画自定义成一个环形进度圈的style，最后将该自定义的style赋值给Progress组件。代码如下：<br>自定义旋转动画progress_rotate.xml：</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">rotate</span> <span class=\"attr\">xmlns:android</span>=<span class=\"string\">\"http://schemas.android.com/apk/res/android\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:drawable</span>=<span class=\"string\">\"@drawable/shape_drawable\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:pivotX</span>=<span class=\"string\">\"50%\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:pivotY</span>=<span class=\"string\">\"50%\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:fromDegrees</span>=<span class=\"string\">\"0\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:toDegrees</span>=<span class=\"string\">\"360\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    &gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">rotate</span>&gt;</span>123456789</span><br></pre></td></tr></table></div></figure>\n\n<p>自定义Progress的style：</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">name</span>=<span class=\"string\">\"CustomProgressStyle\"</span> &gt;</span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;<span class=\"name\">item</span> <span class=\"attr\">name</span>=<span class=\"string\">\"android:indeterminateDrawable\"</span>&gt;</span>@drawable/progress_rotate<span class=\"tag\">&lt;/<span class=\"name\">item</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;<span class=\"name\">item</span> <span class=\"attr\">name</span>=<span class=\"string\">\"android:minWidth\"</span>&gt;</span>72dp<span class=\"tag\">&lt;/<span class=\"name\">item</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;<span class=\"name\">item</span> <span class=\"attr\">name</span>=<span class=\"string\">\"android:maxWidth\"</span>&gt;</span>72dp<span class=\"tag\">&lt;/<span class=\"name\">item</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;<span class=\"name\">item</span> <span class=\"attr\">name</span>=<span class=\"string\">\"android:minHeight\"</span>&gt;</span>72dp<span class=\"tag\">&lt;/<span class=\"name\">item</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;<span class=\"name\">item</span> <span class=\"attr\">name</span>=<span class=\"string\">\"android:maxHeight\"</span>&gt;</span>72dp<span class=\"tag\">&lt;/<span class=\"name\">item</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span>1234567</span><br></pre></td></tr></table></div></figure>\n\n<p>应用到Progress组件</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ProgressBar</span></span></span><br><span class=\"line\"><span class=\"tag\">     <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"100dp\"</span></span></span><br><span class=\"line\"><span class=\"tag\">     <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"100dp\"</span></span></span><br><span class=\"line\"><span class=\"tag\">     <span class=\"attr\">android:layout_centerInParent</span>=<span class=\"string\">\"true\"</span></span></span><br><span class=\"line\"><span class=\"tag\">     <span class=\"attr\">style</span>=<span class=\"string\">\"@style/CustomProgressStyle\"</span></span></span><br><span class=\"line\"><span class=\"tag\">     <span class=\"attr\">android:indeterminateDuration</span>=<span class=\"string\">\"700\"</span></span></span><br><span class=\"line\"><span class=\"tag\">     /&gt;</span>1234567</span><br></pre></td></tr></table></div></figure>\n\n<p>效果如下：<br><img src=\"/2019/11/25/安卓Drawable/20160817220944354.gif\" alt=\"img\"></p>\n<hr>\n<p>  表示纯色填充，通过android:color设置颜色即可。</p>\n<hr>\n<p>描述边框，属性如下：</p>\n<div class=\"article-bounded\"><div class=\"article-table\"><table>\n<thead>\n<tr>\n<th>属性</th>\n<th>含义</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>android:width</td>\n<td>描述边框的宽度，数值越大，越边框越厚</td>\n</tr>\n<tr>\n<td>android:color</td>\n<td>边框的颜色</td>\n</tr>\n<tr>\n<td>android:dashWidth</td>\n<td>组成虚线的线段宽度</td>\n</tr>\n<tr>\n<td>android:dashGap</td>\n<td>组成虚线的线段之间的间隔，间隔越大，虚线看起的间隙就越大</td>\n</tr>\n</tbody></table></div></div>\n<p>  有点要明白的是android:dashWidth和android:dashGap有任意一个为0，则虚线无法预期显示。</p>\n<hr>\n<p>  表示内容或子标签边距，4个属性top、bottom、left、right，需要注意的是这个标签的作用是为内容设置与当前应用此shape的View的边距，而不是设置当前View与父元素的边距。</p>\n<hr>\n<p>  设置背景大小，width和height俩属性。一般来说这个值不是shape的最终显示大小，因为shape作为背景时会根据View的大小而填充其背景，因此Shape的大小很多时候是View的大小决定的。<br>  到这里，shapeDrawable的基本属性我们都介绍完了，下面我们来实现一个比较常见的效果，我们在微信朋友圈点赞或者发布评论时总会出现一个红色带数字的小圆圈提示，嗯，我们就来模仿一下这个效果的实现,首先我们必须把shape属性设置为oval，并设置其纯填充颜色为红色，给一个临时大小宽高大小相同（之所以称为临时大小，是因为其最终大小由使用的View决定的），这样一个圆形背景图就出现啦。代码如下：</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">shape</span> <span class=\"attr\">xmlns:android</span>=<span class=\"string\">\"http://schemas.android.com/apk/res/android\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:shape</span>=<span class=\"string\">\"oval\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    &gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">solid</span> <span class=\"attr\">android:color</span>=<span class=\"string\">\"#D90E0E\"</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">size</span> <span class=\"attr\">android:height</span>=<span class=\"string\">\"10dp\"</span> <span class=\"attr\">android:width</span>=<span class=\"string\">\"10dp\"</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">shape</span>&gt;</span>1234567</span><br></pre></td></tr></table></div></figure>\n\n<p>  接着应用到我们的TextView属性中</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">TextView</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"30dp\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"30dp\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:layout_centerInParent</span>=<span class=\"string\">\"true\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:gravity</span>=<span class=\"string\">\"center\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:textColor</span>=<span class=\"string\">\"#fff\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:text</span>=<span class=\"string\">\"99\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:background</span>=<span class=\"string\">\"@drawable/shape_circle_number\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    /&gt;</span>123456789</span><br></pre></td></tr></table></div></figure>\n\n<p>  最终效果如下：<br>  <img src=\"/2019/11/25/安卓Drawable/20160817231024859.png\" alt=\"img\"><br>  实际上在开发中我们经常会利用shapeDrawable来自定义出所需要的各种背景图像或者显示图片，同时也有益于减少对美工图片的依赖，另外一个好处通过自定义shapeDrawable图片会比美工图片的size小很多，这样我们就能减少不必要的size，以减轻apk的size，可谓两全其美，因此能用shapeDrawable定义图像时，应该尽量使用它。</p>\n<h4 id=\"4、LayerDrawable\">4、LayerDrawable<a href=\"2019/11/25/安卓Drawable#4、LayerDrawable\"></a></h4><p>  一个LayerDrawable是一个可以管理一组drawable对象的drawable。在LayerDrawable的drawable资源按照列表的顺序绘制，列表的最后一个drawable绘制在最上层。LayerDrawable对于xml的标签是<layer-list>其语法如下：</layer-list></p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">layer-list</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"attr\">xmlns:android</span>=<span class=\"string\">\"http://schemas.android.com/apk/res/android\"</span> &gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">item</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:drawable</span>=<span class=\"string\">\"@[package:]drawable/drawable_resource\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:id</span>=<span class=\"string\">\"@[+][package:]id/resource_name\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:top</span>=<span class=\"string\">\"dimension\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:right</span>=<span class=\"string\">\"dimension\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:bottom</span>=<span class=\"string\">\"dimension\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:left</span>=<span class=\"string\">\"dimension\"</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">layer-list</span>&gt;</span>1234567891011</span><br></pre></td></tr></table></div></figure>\n\n<p>  一个layer-list可以包含多个item，而每个item则表示一个Drawable。下面我们来说明一下item的一些属性<br><strong>android:id</strong><br>  资源ID，一个为这个item定义的唯一的资源ID。 使用:”@+id/name”.这样的方式。可以检索或修改这个drawable通过下面的方式：View.findViewById() or Activity.findViewById().<br><strong>android:top</strong><br>  Integer，Drawable相对于View的顶部的偏移量，单位像素<br><strong>android:right</strong><br>  Integer，Drawable相对于View的右边的偏移量，单位像素<br><strong>android:bottom</strong><br>  Integer，Drawable相对于View的底部的偏移量，单位像素<br><strong>android:left</strong><br>  Integer，Drawable相对于View的左边的偏移量，单位像素<br><strong>android:drawable</strong><br>  Drawable资源，可以引用已有的drawable资源，也可在item中自定义Drawable。默认情况下，layer-list中的Drawable都会被缩放至View的大小，因此在必要的情况下，我们可以使用android:gravity属性来控制图片的展示效果，防止图片变形或者被过度拉伸。<br>  下面我们来利用layer-list的叠层效果实现一个文本输入框的底部横线背景。<br><img src=\"/2019/11/25/安卓Drawable/20160815225834972.png\" alt=\"img\"><br>xml 代码如下：</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">layer-list</span> <span class=\"attr\">xmlns:android</span>=<span class=\"string\">\"http://schemas.android.com/apk/res/android\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">item</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">shape</span> <span class=\"attr\">android:shape</span>=<span class=\"string\">\"rectangle\"</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">solid</span> <span class=\"attr\">android:color</span>=<span class=\"string\">\"@color/colorAccent\"</span> /&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">shape</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">item</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">item</span> <span class=\"attr\">android:bottom</span>=<span class=\"string\">\"6dp\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">shape</span> <span class=\"attr\">android:shape</span>=<span class=\"string\">\"rectangle\"</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">solid</span> <span class=\"attr\">android:color</span>=<span class=\"string\">\"#ffffff\"</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">shape</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">item</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">item</span> <span class=\"attr\">android:bottom</span>=<span class=\"string\">\"2dp\"</span></span></span><br><span class=\"line\"><span class=\"tag\">          <span class=\"attr\">android:left</span>=<span class=\"string\">\"2dp\"</span></span></span><br><span class=\"line\"><span class=\"tag\">          <span class=\"attr\">android:right</span>=<span class=\"string\">\"2dp\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">shape</span> <span class=\"attr\">android:shape</span>=<span class=\"string\">\"rectangle\"</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">solid</span> <span class=\"attr\">android:color</span>=<span class=\"string\">\"#ffffff\"</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">shape</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">item</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">layer-list</span>&gt;</span>12345678910111213141516171819202122</span><br></pre></td></tr></table></div></figure>\n\n<p>  应用到EditText上的代码：</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">EditText</span>                                        </span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"200dp\"</span>                 </span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"wrap_content\"</span>         </span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">android:layout_centerInParent</span>=<span class=\"string\">\"true\"</span>         </span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">android:background</span>=<span class=\"string\">\"@drawable/layer_drawable\"</span></span></span><br><span class=\"line\"><span class=\"tag\">  /&gt;</span>    123456</span><br></pre></td></tr></table></div></figure>\n\n<p>  上面代码比较简单，我们就不过的分析，接着我们再利用<layer-list>标签来实现一个带阴影的圆角矩形，layer_list_drawable_2.xml代码如下：</layer-list></p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">layer-list</span> <span class=\"attr\">xmlns:android</span>=<span class=\"string\">\"http://schemas.android.com/apk/res/android\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 灰色阴影 内容距离左边2dp，距离顶部4dp--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">item</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:left</span>=<span class=\"string\">\"2dp\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:top</span>=<span class=\"string\">\"4dp\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">shape</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">solid</span> <span class=\"attr\">android:color</span>=<span class=\"string\">\"@android:color/darker_gray\"</span> /&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">corners</span> <span class=\"attr\">android:radius</span>=<span class=\"string\">\"10dp\"</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">shape</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">item</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 白色前景 内容距离底部4dp 右边2dp--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">item</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:bottom</span>=<span class=\"string\">\"4dp\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:right</span>=<span class=\"string\">\"2dp\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">shape</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">solid</span> <span class=\"attr\">android:color</span>=<span class=\"string\">\"#FFFFFF\"</span> /&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">corners</span> <span class=\"attr\">android:radius</span>=<span class=\"string\">\"10dp\"</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">shape</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">item</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">layer-list</span>&gt;</span>123456789101112131415161718192021</span><br></pre></td></tr></table></div></figure>\n\n<p>  效果如下：<br>  <img src=\"/2019/11/25/安卓Drawable/20160817233846388.png\" alt=\"img\"><br>当然我们也可以在代码中实现这里仅给出示例，不深究，还是建议采用xml的方式定义</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Bitmap bitmap=BitmapFactory.decodeResource(getResources(), R.drawable.image1);</span><br><span class=\"line\">Drawable[] drawables=<span class=\"keyword\">new</span> Drawable[<span class=\"number\">3</span>];</span><br><span class=\"line\">drawables[<span class=\"number\">0</span>]=<span class=\"keyword\">new</span> BitmapDrawable(bitmap);</span><br><span class=\"line\">drawables[<span class=\"number\">1</span>]=<span class=\"keyword\">new</span> BitmapDrawable(bitmap);</span><br><span class=\"line\">drawables[<span class=\"number\">2</span>]=<span class=\"keyword\">new</span> BitmapDrawable(bitmap);</span><br><span class=\"line\">LayerDrawable layer=<span class=\"keyword\">new</span> LayerDrawable(drawables);</span><br><span class=\"line\"><span class=\"comment\">//设置图层边界距离</span></span><br><span class=\"line\">layer.setLayerInset(<span class=\"number\">0</span>, <span class=\"number\">20</span>, <span class=\"number\">20</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>);</span><br><span class=\"line\">layer.setLayerInset(<span class=\"number\">1</span>, <span class=\"number\">40</span>, <span class=\"number\">40</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>);</span><br><span class=\"line\">layer.setLayerInset(<span class=\"number\">2</span>, <span class=\"number\">60</span>, <span class=\"number\">60</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>);</span><br><span class=\"line\">ImageView imageView=(ImageView)findViewById(R.id.imgView);</span><br><span class=\"line\">imageView.setImageDrawable(layer);<span class=\"number\">123456789101112</span></span><br></pre></td></tr></table></div></figure>\n\n<p>  这样我们的带阴影的圆角矩形就出来啦，可以将其作为其他View的背景使用，美工也就不用提供类似的图了，到这里我们应该已经体会带巧用各种Drawable的威力了。</p>\n<h4 id=\"5、StateListDrawable\">5、StateListDrawable<a href=\"2019/11/25/安卓Drawable#5、StateListDrawable\"></a></h4><p>  StateListDrawable对于xml的<selector>标签，这个标签可以说是我们最常用的标签了，在开发中，有时候我们需要一个View在点击前显示某种状态，而在点击后又切换到另外一种状态，这时我们就需要利用<selector>标签来实现啦。如下案例，我们在点击输入邮件地址前文本框底线是灰色，而在点击后文本框底线就变成蓝色了，这也是<selector>标签的应用之一。<br>  <img src=\"/2019/11/25/安卓Drawable/20160815231047102.gif\" alt=\"img\"><br>  StateListDrawable本身也是表示Drawable的集合，每个Drawable就对于View的一种状态，如上面的灰色底线和蓝色底线对应着View的两种V不同时期的状态，因此我们经常使用StateListDrawable来设置View的背景，以便在不同状态下显示不同的效果，从而获得更优的用户体验。其主要语法如下：</selector></selector></selector></p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">selector</span> <span class=\"attr\">xmlns:android</span>=<span class=\"string\">\"http://schemas.android.com/apk/res/android\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:constantSize</span>=<span class=\"string\">[</span>\"<span class=\"attr\">true</span>\" | \"<span class=\"attr\">false</span>\"]</span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:dither</span>=<span class=\"string\">[</span>\"<span class=\"attr\">true</span>\" | \"<span class=\"attr\">false</span>\"]</span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:variablePadding</span>=<span class=\"string\">[</span>\"<span class=\"attr\">true</span>\" | \"<span class=\"attr\">false</span>\"] &gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">item</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:drawable</span>=<span class=\"string\">\"@[package:]drawable/drawable_resource\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:state_pressed</span>=<span class=\"string\">[</span>\"<span class=\"attr\">true</span>\" | \"<span class=\"attr\">false</span>\"]</span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:state_focused</span>=<span class=\"string\">[</span>\"<span class=\"attr\">true</span>\" | \"<span class=\"attr\">false</span>\"]</span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:state_hovered</span>=<span class=\"string\">[</span>\"<span class=\"attr\">true</span>\" | \"<span class=\"attr\">false</span>\"]</span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:state_selected</span>=<span class=\"string\">[</span>\"<span class=\"attr\">true</span>\" | \"<span class=\"attr\">false</span>\"]</span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:state_checkable</span>=<span class=\"string\">[</span>\"<span class=\"attr\">true</span>\" | \"<span class=\"attr\">false</span>\"]</span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:state_checked</span>=<span class=\"string\">[</span>\"<span class=\"attr\">true</span>\" | \"<span class=\"attr\">false</span>\"]</span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:state_enabled</span>=<span class=\"string\">[</span>\"<span class=\"attr\">true</span>\" | \"<span class=\"attr\">false</span>\"]</span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:state_activated</span>=<span class=\"string\">[</span>\"<span class=\"attr\">true</span>\" | \"<span class=\"attr\">false</span>\"]</span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:state_window_focused</span>=<span class=\"string\">[</span>\"<span class=\"attr\">true</span>\" | \"<span class=\"attr\">false</span>\"] /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">selector</span>&gt;</span>1234567891011121314151617</span><br></pre></td></tr></table></div></figure>\n\n<p>item的属性介绍如下：</p>\n<div class=\"article-bounded\"><div class=\"article-table\"><table>\n<thead>\n<tr>\n<th>属性</th>\n<th>含义</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>android:drawable</td>\n<td>该状态下要显示的图像，可以是Drawable也可以是图片</td>\n</tr>\n<tr>\n<td>android:state_pressed</td>\n<td>表示是否处于被按下状态</td>\n</tr>\n<tr>\n<td>android:state_focused</td>\n<td>表示是否已得到焦点状态</td>\n</tr>\n<tr>\n<td>android:state_hovered</td>\n<td>表示光标是否停留在View的自身大小范围内的状态</td>\n</tr>\n<tr>\n<td>android:state_selected</td>\n<td>表示是否处于被选中状态</td>\n</tr>\n<tr>\n<td>android:state_checkable</td>\n<td>表示是否处于可勾选状态</td>\n</tr>\n<tr>\n<td>android:state_checked</td>\n<td>表示是否处于已勾选状态，一般用于CheckBox</td>\n</tr>\n<tr>\n<td>android:state_enabled</td>\n<td>表示是否处于可用状态</td>\n</tr>\n<tr>\n<td>android:state_active</td>\n<td>表示是否处于激活状态</td>\n</tr>\n<tr>\n<td>android:state_window_focused</td>\n<td>表示是否窗口已得到焦点状态</td>\n</tr>\n</tbody></table></div></div>\n<p>selector标签的属性含义如下：<br><strong>android:constantSize</strong><br>  StateListDrawable的固有大小是否随着其状态改变而改变，因为在状态改变后，StateListDrawable会切换到别的Drawable，而不同的Drawable其大小可能不一样。true表示大小不变，这时其固有大小是内容所有Drawable的固有大小的最大值。false则会随着状态改变而改变，默认值为false<br><strong>android:variablePadding</strong><br>  表示 StateListDrawable的padding是否随状态的改变而改变，默认值为false，一般建议设置为false就行。<br><strong>android:dither</strong><br>  是否开启抖动效果，开启后可使高质量的图片在低质量的屏幕上仍然有较好的显示效果，一般建议开启，设置为true。<br>接下来我们来看一个例子，按钮点击前后状态改变。代码如下：</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">selector</span> <span class=\"attr\">xmlns:android</span>=<span class=\"string\">\"http://schemas.android.com/apk/res/android\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--获取焦点状态--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">item</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:state_focused</span>=<span class=\"string\">\"true\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:drawable</span>=<span class=\"string\">\"@color/color_state\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    /&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--按下状态--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">item</span> <span class=\"attr\">android:state_pressed</span>=<span class=\"string\">\"true\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:drawable</span>=<span class=\"string\">\"@color/color_state\"</span> /&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--默认状态下--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">item</span> <span class=\"attr\">android:drawable</span>=<span class=\"string\">\"@color/normal\"</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">selector</span>&gt;</span>123456789101112131415</span><br></pre></td></tr></table></div></figure>\n\n<p>接着应用到button上：</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Button</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">android:padding</span>=<span class=\"string\">\"8dp\"</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"wrap_content\"</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"wrap_content\"</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">android:layout_centerInParent</span>=<span class=\"string\">\"true\"</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">android:text</span>=<span class=\"string\">\"Selector_State\"</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">android:textColor</span>=<span class=\"string\">\"#fff\"</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">android:background</span>=<span class=\"string\">\"@drawable/selector_drawable\"</span></span></span><br><span class=\"line\"><span class=\"tag\">       /&gt;</span>123456789</span><br></pre></td></tr></table></div></figure>\n\n<p>效果如下：<br><img src=\"/2019/11/25/安卓Drawable/20160816083046426.gif\" alt=\"img\"><br>  上面是通过颜色定义不同状态下的显示 效果，当然我们也可以利用shapeDrawable定义各种背景图像然后应用到StateListDrawable中，下面我们定义两个不同状态下的圆角矩形，并应用到button上<br>shape_drawable_for_btn_normal.xml代码如下：</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">shape</span> <span class=\"attr\">xmlns:android</span>=<span class=\"string\">\"http://schemas.android.com/apk/res/android\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:shape</span>=<span class=\"string\">\"rectangle\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    &gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">solid</span> <span class=\"attr\">android:color</span>=<span class=\"string\">\"@color/normal\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">solid</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">corners</span> <span class=\"attr\">android:radius</span>=<span class=\"string\">\"8dp\"</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">shape</span>&gt;</span>1234567</span><br></pre></td></tr></table></div></figure>\n\n<p>shape_drawable_for_btn_press.xml代码如下：</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">shape</span> <span class=\"attr\">xmlns:android</span>=<span class=\"string\">\"http://schemas.android.com/apk/res/android\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:shape</span>=<span class=\"string\">\"rectangle\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    &gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">solid</span> <span class=\"attr\">android:color</span>=<span class=\"string\">\"@color/color_state\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">solid</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">corners</span> <span class=\"attr\">android:radius</span>=<span class=\"string\">\"8dp\"</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">shape</span>&gt;</span>1234567</span><br></pre></td></tr></table></div></figure>\n\n<p>selector_for_btn.xml代码如下：</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">selector</span> <span class=\"attr\">xmlns:android</span>=<span class=\"string\">\"http://schemas.android.com/apk/res/android\"</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--获取焦点状态--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">item</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:state_focused</span>=<span class=\"string\">\"true\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:drawable</span>=<span class=\"string\">\"@drawable/shape_drawable_for_btn_press\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        /&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--按下状态--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">item</span> <span class=\"attr\">android:state_pressed</span>=<span class=\"string\">\"true\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:drawable</span>=<span class=\"string\">\"@drawable/shape_drawable_for_btn_press\"</span> /&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--默认状态下--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">item</span> <span class=\"attr\">android:drawable</span>=<span class=\"string\">\"@drawable/shape_drawable_for_btn_normal\"</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">selector</span>&gt;</span>12345678910111213141516</span><br></pre></td></tr></table></div></figure>\n\n<p>应用到button上</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Button</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">android:padding</span>=<span class=\"string\">\"8dp\"</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"wrap_content\"</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"wrap_content\"</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">android:layout_centerInParent</span>=<span class=\"string\">\"true\"</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">android:text</span>=<span class=\"string\">\"Selector_State\"</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">android:textColor</span>=<span class=\"string\">\"#fff\"</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">android:background</span>=<span class=\"string\">\"@drawable/selector_for_btn\"</span></span></span><br><span class=\"line\"><span class=\"tag\">       /&gt;</span>123456789</span><br></pre></td></tr></table></div></figure>\n\n<p>最终效果如下：<br><img src=\"/2019/11/25/安卓Drawable/20160818081248786.gif\" alt=\"img\"><br>最后给出一个通过代码实现的案例给大家参考（建议尽量使用xml定义，代码定义比较复杂）：</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/** 设置Selector。 */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> StateListDrawable <span class=\"title\">newSelector</span><span class=\"params\">(Context context, <span class=\"keyword\">int</span> idNormal, <span class=\"keyword\">int</span> idPressed, <span class=\"keyword\">int</span> idFocused,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">                                                <span class=\"keyword\">int</span> idUnable)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">//相当于&lt;selector&gt;标签</span></span><br><span class=\"line\">        StateListDrawable bg = <span class=\"keyword\">new</span> StateListDrawable();</span><br><span class=\"line\">        Drawable normal = context.getResources().getDrawable(R.drawable.shape_drawable_for_btn_normal);</span><br><span class=\"line\">        Drawable pressed = context.getResources().getDrawable(R.drawable.shape_drawable_for_btn_press);</span><br><span class=\"line\">        Drawable focused =context.getResources().getDrawable(R.drawable.shape_drawable_for_btn_press);</span><br><span class=\"line\">        Drawable unable = context.getResources().getDrawable(R.drawable.shape_drawable_for_btn_unable);</span><br><span class=\"line\">        <span class=\"comment\">//设置每种状态下的Drawable显示</span></span><br><span class=\"line\">        <span class=\"comment\">// View.PRESSED_ENABLED_STATE_SET</span></span><br><span class=\"line\">        bg.addState(<span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[] &#123; android.R.attr.state_pressed, android.R.attr.state_enabled &#125;, pressed);</span><br><span class=\"line\">        <span class=\"comment\">// View.ENABLED_FOCUSED_STATE_SET</span></span><br><span class=\"line\">        bg.addState(<span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[] &#123; android.R.attr.state_enabled, android.R.attr.state_focused &#125;, focused);</span><br><span class=\"line\">        <span class=\"comment\">// View.ENABLED_STATE_SET</span></span><br><span class=\"line\">        bg.addState(<span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[] &#123; android.R.attr.state_enabled &#125;, normal);</span><br><span class=\"line\">        <span class=\"comment\">// View.FOCUSED_STATE_SET</span></span><br><span class=\"line\">        bg.addState(<span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[] &#123; android.R.attr.state_focused &#125;, focused);</span><br><span class=\"line\">        <span class=\"comment\">// View.WINDOW_FOCUSED_STATE_SET</span></span><br><span class=\"line\">        bg.addState(<span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[] &#123; android.R.attr.state_window_focused &#125;, unable);</span><br><span class=\"line\">        <span class=\"comment\">// View.EMPTY_STATE_SET</span></span><br><span class=\"line\">        bg.addState(<span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[] &#123;&#125;, normal);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> bg;</span><br><span class=\"line\">    &#125;<span class=\"number\">123456789101112131415161718192021222324</span></span><br></pre></td></tr></table></div></figure>\n\n<h4 id=\"6、LevelListDrawable\">6、LevelListDrawable<a href=\"2019/11/25/安卓Drawable#6、LevelListDrawable\"></a></h4><p>  LevelListDrawable对应于<level-list>标签，也表示一个Drawable的集合，但集合中的每个Drawable都一个等级。根据不同等级，LevelListDrawable会切换到相应的Drawable。语法如下：</level-list></p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">level-list</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">xmlns:android</span>=<span class=\"string\">\"http://schemas.android.com/apk/res/android\"</span> &gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">item</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:drawable</span>=<span class=\"string\">\"@drawable/drawable_resource\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:maxLevel</span>=<span class=\"string\">\"integer\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:minLevel</span>=<span class=\"string\">\"integer\"</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">level-list</span>&gt;</span>12345678</span><br></pre></td></tr></table></div></figure>\n\n<p>属性说明如下：</p>\n<div class=\"article-bounded\"><div class=\"article-table\"><table>\n<thead>\n<tr>\n<th>属性</th>\n<th>含义</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>android:drawable</td>\n<td>该等级下需要展示的图片</td>\n</tr>\n<tr>\n<td>android:maxLevel</td>\n<td>该项所允许的最大level</td>\n</tr>\n<tr>\n<td>android:minLevel</td>\n<td>该项所允许的最小level</td>\n</tr>\n</tbody></table></div></div>\n<p>  实际上我们也很容易知道<level-list>标签中的每个Item各表示一个Drawable，并有与之对应的等级，而等级则是由android:maxLevel和android:minLevel所决定的，其等级范围是0-10000，最小为0，默认值，最大则为10000，还是一样的做法，先来看一个案例：</level-list></p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">level-list</span> <span class=\"attr\">xmlns:android</span>=<span class=\"string\">\"http://schemas.android.com/apk/res/android\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">item</span> <span class=\"attr\">android:drawable</span>=<span class=\"string\">\"@drawable/image4\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:maxLevel</span>=<span class=\"string\">\"0\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        /&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">item</span> <span class=\"attr\">android:drawable</span>=<span class=\"string\">\"@drawable/image1\"</span></span></span><br><span class=\"line\"><span class=\"tag\">          <span class=\"attr\">android:maxLevel</span>=<span class=\"string\">\"1\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        /&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">item</span> <span class=\"attr\">android:drawable</span>=<span class=\"string\">\"@drawable/image2\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:maxLevel</span>=<span class=\"string\">\"2\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        /&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">item</span> <span class=\"attr\">android:drawable</span>=<span class=\"string\">\"@drawable/image3\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:maxLevel</span>=<span class=\"string\">\"3\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">level-list</span>&gt;</span>123456789101112131415161718</span><br></pre></td></tr></table></div></figure>\n\n<p>  我们定义了4个item，等级分别为0，1，2，3，它们都有与之对应的Drawable，然后我们在java代码中实现一个效果，每过2秒更好一个不同等级的图片，代码如下：</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.zejian.drawble;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> android.os.Bundle;</span><br><span class=\"line\"><span class=\"keyword\">import</span> android.os.Handler;</span><br><span class=\"line\"><span class=\"keyword\">import</span> android.os.Message;</span><br><span class=\"line\"><span class=\"keyword\">import</span> android.support.v7.app.AppCompatActivity;</span><br><span class=\"line\"><span class=\"keyword\">import</span> android.widget.ImageView;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MainActivity</span> <span class=\"keyword\">extends</span> <span class=\"title\">AppCompatActivity</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> ImageView imageView;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">static</span> Handler handler = <span class=\"keyword\">new</span> Handler()&#123;</span><br><span class=\"line\">        <span class=\"meta\">@Override</span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">handleMessage</span><span class=\"params\">(Message msg)</span> </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(msg.what==<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">                imageView.getDrawable().setLevel(<span class=\"number\">1</span>);</span><br><span class=\"line\">            &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(msg.what==<span class=\"number\">2</span>)&#123;</span><br><span class=\"line\">                imageView.getDrawable().setLevel(<span class=\"number\">2</span>);</span><br><span class=\"line\">            &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(msg.what==<span class=\"number\">3</span>)&#123;</span><br><span class=\"line\">                imageView.getDrawable().setLevel(<span class=\"number\">3</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">onCreate</span><span class=\"params\">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>.onCreate(savedInstanceState);</span><br><span class=\"line\">        setContentView(R.layout.activity_main);</span><br><span class=\"line\">        imageView=(ImageView)findViewById(R.id.image);</span><br><span class=\"line\">        imageView.setImageResource(R.drawable.level_list_drawable);</span><br><span class=\"line\">        imageView.setImageLevel(<span class=\"number\">0</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;<span class=\"number\">4</span>;i++)&#123;</span><br><span class=\"line\">            handler.sendEmptyMessageDelayed(i,i*<span class=\"number\">2000</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;<span class=\"number\">12345678910111213141516171819202122232425262728293031323334353637</span></span><br></pre></td></tr></table></div></figure>\n\n<p>实现效果如下：<br><img src=\"/2019/11/25/安卓Drawable/20160816085811829.gif\" alt=\"img\"><br>  实际上我们还可以设置等级范围，当等级在某个范围内时去显示对应范围内的图片，这也是可以的。这个比较简单，这里就不演示了哈。</p>\n","next":{"title":"idea条件断点","link":"2019/11/07/idea条件断点"},"plink":"https://treeeeeeee.github.io/2019/11/25/安卓Drawable/","toc":[{"title":"一、Drawable的简述","id":"一、Drawable的简述","index":"1"},{"title":"二、千变万化的Drawable","id":"二、千变万化的Drawable","index":"2"}]}