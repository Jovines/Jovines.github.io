{"title":"linux后台运行程序命令","date":"2019-10-03T15:50:00.000Z","author":"Jon","link":"2019/10/03/linux后台运行程序","comments":true,"tags":["知识就是力量"],"categories":["Linux"],"updated":"2019-10-03T17:19:08.586Z","content":"<h1 id=\"linux后台执行命令：-amp-和nohup\">linux后台执行命令：&amp;和nohup<a href=\"2019/10/03/linux后台运行程序#linux后台执行命令：-amp-和nohup\"></a></h1><h2 id=\"归纳：\">归纳：<a href=\"2019/10/03/linux后台运行程序#归纳：\"></a></h2><h4 id=\"ps-ef或者grep查看进程\"><code>ps -ef</code>或者<code>grep</code>查看进程<a href=\"2019/10/03/linux后台运行程序#ps-ef或者grep查看进程\"></a></h4><h4 id=\"kill-XX杀死进程，XX替换为进程PID\"><code>kill XX</code>杀死进程，<code>XX</code>替换为进程PID<a href=\"2019/10/03/linux后台运行程序#kill-XX杀死进程，XX替换为进程PID\"></a></h4><h4 id=\"命令后加-amp-后台运行，但生命周期受窗口限制\">命令后加<code>&amp;</code>后台运行，但生命周期受窗口限制<a href=\"2019/10/03/linux后台运行程序#命令后加-amp-后台运行，但生命周期受窗口限制\"></a></h4><h4 id=\"nohup-命令-amp-完全后台运行\"><code>nohup 命令 &amp;</code>完全后台运行<a href=\"2019/10/03/linux后台运行程序#nohup-命令-amp-完全后台运行\"></a></h4><p><a href=\"https://blog.csdn.net/liuyanfeier/article/details/62422742\" target=\"_blank\" rel=\"noopener\"><strong>原文链接</strong></a>，本文归纳梳理，便于自己记忆。</p>\n<h2 id=\"后台运行命令\">后台运行命令<a href=\"2019/10/03/linux后台运行程序#后台运行命令\"></a></h2><h3 id=\"amp\">&amp;<a href=\"2019/10/03/linux后台运行程序#amp\"></a></h3><p><code>断开链接或者关闭窗口仍然会终止程序</code></p>\n<blockquote>\n<p>在命令后面加上&amp; 实现后台运行。例如：</p>\n</blockquote>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sh test.sh &amp;</span><br></pre></td></tr></table></div></figure>\n\n<blockquote>\n<ul>\n<li><p>适合在后台运行的命令有find、费时的排序及一些shell脚本。</p>\n</li>\n<li><p>需要用户交互的命令不要放在后台执行，因为这样你的机器就会在那里傻等。</p>\n</li>\n<li><p>后台运行一样会将结果输出到屏幕上，干扰你的工作。</p>\n</li>\n<li><p>如果放在后台运行的作业会产生大量的输出，最好使用下面的方法把它的输出重定向到某个文件中</p>\n</li>\n</ul>\n<p><code>命令  &gt;  out.file  2&gt;&amp;1  &amp; 1</code></p>\n<p>这样，所有的标准输出和错误输出都将被重定向到一个叫做out.file 的文件中。</p>\n<ul>\n<li><p>当你成功地提交进程以后，就会显示出一个进程号，可以用它来监控该进程，或杀死它</p>\n<p><strong>(ps -ef | grep 进程号 或者 kill -9 进程号）</strong></p>\n</li>\n</ul>\n</blockquote>\n<h3 id=\"nohup\">nohup<a href=\"2019/10/03/linux后台运行程序#nohup\"></a></h3><p> <code>可退出命令窗口使用</code></p>\n<blockquote>\n<ul>\n<li><p>使用&amp;命令后，作业被提交到后台运行，当前控制台没有被占用</p>\n</li>\n<li><p>一但把当前控制台关掉(退出帐户时)，作业就会停止运行。</p>\n</li>\n<li><p><strong>nohup命令</strong>可以在你退出帐户之后继续运行相应的进程。</p>\n<blockquote>\n<p>nohup就是不挂起的意思( no hang up)。该命令的一般形式为：</p>\n</blockquote>\n</li>\n</ul>\n</blockquote>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nohup 命令 &amp;1</span><br></pre></td></tr></table></div></figure>\n\n<p>如果使用nohup命令提交作业，那么在缺省情况下该作业的所有输出都被重定向到一个名为nohup.out的文件中，除非另外指定了输出文件：</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nohup command &gt; myout.file 2&gt;&amp;1 &amp;1</span><br></pre></td></tr></table></div></figure>\n\n<h2 id=\"注意\">注意<a href=\"2019/10/03/linux后台运行程序#注意\"></a></h2><p>使用了nohup之后，很多人就这样不管了，其实这样有可能在当前账户非正常退出或者结束的时候，命令还是自己结束了。所以在使用nohup命令后台运行命令之后，需要使用exit正常退出当前账户，这样才能保证命令一直在后台运行。</p>\n<ul>\n<li>ctrl + z<br>可以将一个正在前台执行的命令放到后台，并且处于暂停状态。</li>\n<li>ctrl+c<br>终止前台命令。</li>\n<li>jobs<br>查看当前有多少在后台运行的命令。<br>jobs -l选项可显示所有任务的PID，jobs的状态可以是running, stopped, Terminated。但是如果任务被终止了（kill），shell 从当前的shell环境已知的列表中删除任务的进程标识。</li>\n<li>2&gt;&amp;1解析</li>\n</ul>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">command &gt;out.file 2&gt;&amp;1 &amp;1</span><br></pre></td></tr></table></div></figure>\n\n<ol>\n<li>command&gt;out.file是将command的输出重定向到out.file文件，即输出内容不打印到屏幕上，而是输出到out.file文件中。</li>\n<li>2&gt;&amp;1 是将标准出错重定向到标准输出，这里的标准输出已经重定向到了out.file文件，即将标准出错也输出到out.file文件中。最后一个&amp;， 是让该命令在后台执行。</li>\n<li>试想2&gt;1代表什么，2与&gt;结合代表错误重定向，而1则代表错误重定向到一个文件1，而不代表标准输出；换成2&gt;&amp;1，&amp;与1结合就代表标准输出了，就变成错误重定向到标准输出.</li>\n</ol>\n","prev":{"title":".gitignore忽略文件总结","link":"2019/10/04/gitignore忽略文件总结"},"next":{"title":"错误记录：git: 'pull' is not a git command. See 'git --help'.  Did you mean one of these? \tpull","link":"2019/10/03/git-pull-is-not-a-git-command-See-git-help-Did-you-mean-one-of-these-pull"},"plink":"https://treeeeeeee.github.io/2019/10/03/linux后台运行程序/","toc":[{"title":"linux后台执行命令：&amp;和nohup","id":"linux后台执行命令：-amp-和nohup","index":"1","children":[{"title":"归纳：","id":"归纳：","index":"1.1"},{"title":"后台运行命令","id":"后台运行命令","index":"1.2","children":[{"title":"&amp;","id":"amp","index":"1.2.1"},{"title":"nohup","id":"nohup","index":"1.2.2"}]},{"title":"注意","id":"注意","index":"1.3"}]}]}