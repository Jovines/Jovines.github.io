{"title":"@Override浅认识","date":"2019-10-22T03:12:00.000Z","author":"Jon","link":"2019/10/22/verride浅认识","comments":true,"tags":["java","课件附页"],"categories":["java","课件附页"],"updated":"2019-10-22T16:37:29.412Z","content":"<p><code>@Override</code>是伪代码,表示重写可以不写，不过写上有如下好处: </p>\n<ul>\n<li>可以当注释用,方便阅读，可以很明显的看到哪些方法是重写的方法；</li>\n<li>编译器可以给你验证@Override下面的方法名是否是你父类中所有的,如果没有则报错。比如你如果没写@Override而你下面的方法名又写错了，这时你的编译器是可以通过的(它以为这个方法是你的子类中自己增加的方法)。</li>\n</ul>\n","prev":{"title":"java编译运行过程详解","link":"2019/10/23/java编译运行过程详解"},"next":{"title":"java面向对象-接口和其他的类","link":"2019/10/12/java面向对象-接口和其他的类"},"plink":"https://treeeeeeee.github.io/2019/10/22/verride浅认识/"}