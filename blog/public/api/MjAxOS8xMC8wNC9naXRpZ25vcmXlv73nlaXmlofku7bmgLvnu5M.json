{"title":".gitignore忽略文件总结","date":"2019-10-03T17:23:00.000Z","author":"Jon","link":"2019/10/04/gitignore忽略文件总结","comments":true,"tags":["知识就是力量"],"categories":["Git学习备忘"],"updated":"2019-10-03T17:40:07.952Z","content":"<h2 id=\"语法归纳\">语法归纳<a href=\"2019/10/04/gitignore忽略文件总结#语法归纳\"></a></h2><figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#               表示此为注释,将被Git忽略</span></span><br><span class=\"line\">*.a             表示忽略所有 .a 结尾的文件</span><br><span class=\"line\">!lib.a          表示但lib.a除外</span><br><span class=\"line\">/TODO           表示仅仅忽略项目根目录下的 TODO 文件，不包括 subdir/TODO</span><br><span class=\"line\">build/          表示忽略 build/目录下的所有文件，过滤整个build文件夹；</span><br><span class=\"line\">doc/*.txt       表示会忽略doc/notes.txt但不包括 doc/server/arch.txt</span><br><span class=\"line\"> </span><br><span class=\"line\">bin/:           表示忽略当前路径下的bin文件夹，该文件夹下的所有内容都会被忽略，不忽略 bin 文件</span><br><span class=\"line\">/bin:           表示忽略根目录下的bin文件</span><br><span class=\"line\">/*.c:           表示忽略cat.c，不忽略 build/cat.c</span><br><span class=\"line\">debug/*.obj:    表示忽略debug/io.obj，不忽略 debug/common/io.obj和tools/debug/io.obj</span><br><span class=\"line\">**/foo:         表示忽略/foo,a/foo,a/b/foo等</span><br><span class=\"line\">a/**/b:         表示忽略a/b, a/x/b,a/x/y/b等</span><br><span class=\"line\">!/bin/run.sh    表示不忽略bin目录下的run.sh文件</span><br><span class=\"line\">*.<span class=\"built_in\">log</span>:          表示忽略所有 .<span class=\"built_in\">log</span> 文件</span><br><span class=\"line\">config.php:     表示忽略当前路径的 config.php 文件</span><br><span class=\"line\"> </span><br><span class=\"line\">/mtk/           表示过滤整个文件夹</span><br><span class=\"line\">*.zip           表示过滤所有.zip文件</span><br><span class=\"line\">/mtk/do.c       表示过滤某个具体文件</span><br><span class=\"line\"> </span><br><span class=\"line\">被过滤掉的文件就不会出现在git仓库中（gitlab或github）了，当然本地库中还有，只是push的时候不会上传。</span><br><span class=\"line\"> </span><br><span class=\"line\">需要注意的是，gitignore还可以指定要将哪些文件添加到版本管理中，如下：</span><br><span class=\"line\">!*.zip</span><br><span class=\"line\">!/mtk/one.txt</span><br><span class=\"line\"> </span><br><span class=\"line\">唯一的区别就是规则开头多了一个感叹号，Git会将满足这类规则的文件添加到版本管理中。为什么要有两种规则呢？</span><br><span class=\"line\">想象一个场景：假如我们只需要管理/mtk/目录中的one.txt文件，这个目录中的其他文件都不需要管理，那么.gitignore规则应写为：：</span><br><span class=\"line\">/mtk/*</span><br><span class=\"line\">!/mtk/one.txt</span><br><span class=\"line\"> </span><br><span class=\"line\">假设我们只有过滤规则，而没有添加规则，那么我们就需要把/mtk/目录下除了one.txt以外的所有文件都写出来！</span><br><span class=\"line\">注意上面的/mtk/*不能写为/mtk/，否则父目录被前面的规则排除掉了，one.txt文件虽然加了!过滤规则，也不会生效！</span><br><span class=\"line\"> </span><br><span class=\"line\">----------------------------------------------------------------------------------</span><br><span class=\"line\">还有一些规则如下：</span><br><span class=\"line\">fd1/*</span><br><span class=\"line\">说明：忽略目录 fd1 下的全部内容；注意，不管是根目录下的 /fd1/ 目录，还是某个子目录 /child/fd1/ 目录，都会被忽略；</span><br><span class=\"line\"> </span><br><span class=\"line\">/fd1/*</span><br><span class=\"line\">说明：忽略根目录下的 /fd1/ 目录的全部内容；</span><br><span class=\"line\"> </span><br><span class=\"line\">/*</span><br><span class=\"line\">!.gitignore</span><br><span class=\"line\">!/fw/ </span><br><span class=\"line\">/fw/*</span><br><span class=\"line\">!/fw/bin/</span><br><span class=\"line\">!/fw/sf/</span><br><span class=\"line\">说明：忽略全部内容，但是不忽略 .gitignore 文件、根目录下的 /fw/bin/ 和 /fw/sf/ 目录；注意要先对bin/的父目录使用!规则，使其不被排除。</span><br></pre></td></tr></table></div></figure>\n\n<h2 id=\"从版本库去除并忽略提交\">从版本库去除并忽略提交<a href=\"2019/10/04/gitignore忽略文件总结#从版本库去除并忽略提交\"></a></h2><h3 id=\"先执行以下任意删除命令\">先执行以下任意删除命令<a href=\"2019/10/04/gitignore忽略文件总结#先执行以下任意删除命令\"></a></h3><figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git rm file\t\t\t\t\t\t<span class=\"comment\"># 从版本库删除，并删除本地文件</span></span><br><span class=\"line\">git rm --cached file\t\t\t<span class=\"comment\"># 从版本库删除文件并保留本地文件</span></span><br><span class=\"line\">git rm -r --cached loggers \t \t<span class=\"comment\"># -r 是允许递归删除，当要删除的是文件夹的时候有用</span></span><br></pre></td></tr></table></div></figure>\n\n<h3 id=\"在-gitignore文件中添加\">在.gitignore文件中添加<a href=\"2019/10/04/gitignore忽略文件总结#在-gitignore文件中添加\"></a></h3><h2 id=\"提醒\">提醒<a href=\"2019/10/04/gitignore忽略文件总结#提醒\"></a></h2><h3 id=\"gitignore忽略规则的匹配语法\">.gitignore忽略规则的匹配语法<a href=\"2019/10/04/gitignore忽略文件总结#gitignore忽略规则的匹配语法\"></a></h3><p>每一行的忽略规则的语法如下：</p>\n<ul>\n<li><strong>空格</strong>不匹配任意文件，可作为分隔符，可用反斜杠转义</li>\n<li>以“<strong>＃</strong>”开头的行都会被 Git 忽略。即#开头的文件标识注释，可以使用反斜杠进行转义。</li>\n<li>可以使用标准的<strong>glob</strong>模式匹配。所谓的glob模式是指shell所使用的简化了的正则表达式。</li>\n<li>以斜杠”<strong>/</strong>“开头表示目录；”/“结束的模式只匹配文件夹以及在该文件夹路径下的内容，但是不匹配该文件；”/“开始的模式匹配项目跟目录；如果一个模式不包含斜杠，则它匹配相对于当前 .gitignore 文件路径的内容，如果该模式不在 .gitignore 文件中，则相对于项目根目录。</li>\n<li>以星号”<strong><em>**”通配多个字符，即匹配多个任意字符；使用两个星号”</em></strong>*<strong>“ 表示匹配任意中间目录，比如`a/</strong>/z`可以匹配 a/z, a/b/z 或 a/b/c/z等。</li>\n<li>以问号”<strong>?</strong>“通配单个字符，即匹配一个任意字符；</li>\n<li>以方括号”<strong>[]</strong>“包含单个字符的匹配列表，即匹配任何一个列在方括号中的字符。比如[abc]表示要么匹配一个a，要么匹配一个b，要么匹配一个c；如果在方括号中使用短划线分隔两个字符，表示所有在这两个字符范围内的都可以匹配。比如[0-9]表示匹配所有0到9的数字，[a-z]表示匹配任意的小写字母）。</li>\n<li>以叹号”<strong>!</strong>“表示不忽略(跟踪)匹配到的文件或目录，即要忽略指定模式以外的文件或目录，可以在模式前加上惊叹号（!）取反。需要特别注意的是：<strong>如果文件的父目录已经被前面的规则排除掉了，那么对这个文件用”!”规则是不起作用的</strong>。也就是说”!”开头的模式表示否定，该文件将会再次被包含，如果排除了该文件的父级目录，则使用”!”也不会再次被包含。可以使用反斜杠进行转义。</li>\n</ul>\n<p><strong>需要谨记</strong>：git对于.ignore配置文件是按行从上到下进行规则匹配的，意味着如果前面的规则匹配的范围更大，则后面的规则将不会生效；</p>\n<h3 id=\"gitignore忽略规则的优先级\">.gitignore忽略规则的优先级<a href=\"2019/10/04/gitignore忽略文件总结#gitignore忽略规则的优先级\"></a></h3><p>在 .gitingore 文件中，每一行指定一个忽略规则，Git检查忽略规则的时候有多个来源，它的优先级如下（由高到低）：</p>\n<ul>\n<li>从命令行中读取可用的忽略规则</li>\n<li>当前目录定义的规则</li>\n<li>父级目录定义的规则，依次递推</li>\n<li>$GIT_DIR/info/exclude 文件中定义的规则</li>\n<li>core.excludesfile中定义的全局规则</li>\n</ul>\n","next":{"title":"linux后台运行程序命令","link":"2019/10/03/linux后台运行程序"},"plink":"https://treeeeeeee.github.io/2019/10/04/gitignore忽略文件总结/","toc":[{"title":"语法归纳","id":"语法归纳","index":"1"},{"title":"从版本库去除并忽略提交","id":"从版本库去除并忽略提交","index":"2","children":[{"title":"先执行以下任意删除命令","id":"先执行以下任意删除命令","index":"2.1"},{"title":"在.gitignore文件中添加","id":"在-gitignore文件中添加","index":"2.2"}]},{"title":"提醒","id":"提醒","index":"3","children":[{"title":".gitignore忽略规则的匹配语法","id":"gitignore忽略规则的匹配语法","index":"3.1"},{"title":".gitignore忽略规则的优先级","id":"gitignore忽略规则的优先级","index":"3.2"}]}]}