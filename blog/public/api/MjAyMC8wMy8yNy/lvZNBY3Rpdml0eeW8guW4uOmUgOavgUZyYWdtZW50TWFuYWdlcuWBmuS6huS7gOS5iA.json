{"title":"当Activity异常销毁FragmentManager做了什么","date":"2020-03-26T18:36:09.000Z","date_formatted":{"ll":"Mar 27, 2020","L":"03/27/2020","MM-DD":"03-27"},"thumbnail":"2020/03/27/当Activity异常销毁FragmentManager做了什么/../当Activity异常销毁FragmentManager做了什么/image-20200327042035621.png","link":"2020/03/27/当Activity异常销毁FragmentManager做了什么","comments":true,"tags":["查漏补缺"],"categories":["Android"],"updated":"2020-04-02T21:47:15.863Z","content":"<p>最近在做项目的时候因为<code>Activity</code>和<code>FragmentManager</code>，使项目遇到了一些问题，<code>Activity</code>异常销毁重启之后，上次加载进去的<code>Fragment</code>也依然存在<code>FragmentManager</code>当中，但是在<code>Activity</code>中的初始化函数仍然会生成新的<code>fragment</code>进去。以此导致了界面出现了重复加载的问题。</p>\n<p>下面的分析都是基于<code>Androidx</code>的源码，和<code>support</code>有些区别</p>\n<h2 id=\"问题出现可能的原因\">问题出现可能的原因<a href=\"#问题出现可能的原因\" title=\"问题出现可能的原因\"></a></h2><ul><li><code>FragmentManager</code>生命周期更长</li><li>销毁之前恢复机制将这些<code>fragment</code>数据进行了保存，重新创建时恢复了</li></ul><h4 id=\"fragmentmanager生命周期更长？？？\"><code>FragmentManager</code>生命周期更长？？？<a href=\"#fragmentmanager生命周期更长？？？\" title=\"FragmentManager生命周期更长？？？\"></a></h4><p><code>Activity</code>异常销毁（或者配置更改）时<code>FragmentManager</code>会像<code>ViewModel</code>一样自动保存下来？以便于下次加载使用吗</p>\n<p><strong>证明一下</strong></p>\n<figure class=\"highlight kotlin\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MainActivity</span> : <span class=\"type\">AppCompatActivity</span></span>() &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">companion</span> <span class=\"keyword\">object</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> <span class=\"keyword\">val</span> TAG = <span class=\"string\">\"MainActivityDemo\"</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">override</span> <span class=\"function\"><span class=\"keyword\">fun</span> <span class=\"title\">onCreate</span><span class=\"params\">(savedInstanceState: <span class=\"type\">Bundle</span>?)</span></span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>.onCreate(savedInstanceState)</span><br><span class=\"line\">        setContentView(R.layout.activity_main)</span><br><span class=\"line\">        Log.d(TAG, <span class=\"string\">\"<span class=\"subst\">$&#123;supportFragmentManager&#125;</span>\"</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><p>接下来我们开启分屏</p>\n<p><img src=\"/2020/03/27/%E5%BD%93Activity%E5%BC%82%E5%B8%B8%E9%94%80%E6%AF%81FragmentManager%E5%81%9A%E4%BA%86%E4%BB%80%E4%B9%88/image-20200327042035621.png\" class=\"φcy\" alt=\"image-20200327042035621\"></p>\n<p>很明显这里不是同一个对象，这个原因pass。</p>\n<h4 id=\"被恢复了？？\">被恢复了？？<a href=\"#被恢复了？？\" title=\"被恢复了？？\"></a></h4><p><img src=\"/2020/03/27/%E5%BD%93Activity%E5%BC%82%E5%B8%B8%E9%94%80%E6%AF%81FragmentManager%E5%81%9A%E4%BA%86%E4%BB%80%E4%B9%88/v2-308d4b287931127b020ac4cc861a1757_hd-1571843355924.jpg\" alt=\"v2-308d4b287931127b020ac4cc861a1757_hd-1571843355924\" style=\"zoom:50%;\">我们来看看<code>FragmentActivity</code>中<code>onSaveInstanceState</code>干了什么</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">onSaveInstanceState</span><span class=\"params\">(@NonNull Bundle outState)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">super</span>.onSaveInstanceState(outState);</span><br><span class=\"line\">    markFragmentsCreated();<span class=\"comment\">//标记已经创建的fragment</span></span><br><span class=\"line\">    mFragmentLifecycleRegistry.handleLifecycleEvent(Lifecycle.Event.ON_STOP);</span><br><span class=\"line\">    Parcelable p = mFragments.saveAllState();<span class=\"comment\">//保存状态</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (p != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">        outState.putParcelable(FRAGMENTS_TAG, p);<span class=\"comment\">//放到Bundle</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// do something..................</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><p>这里的确做了保存，那么我们看看在哪里用到了<code>FRAGMENTS_TAG</code>这个标志位</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">onCreate</span><span class=\"params\">(@Nullable Bundle savedInstanceState)</span> </span>&#123;</span><br><span class=\"line\">    mFragments.attachHost(<span class=\"keyword\">null</span> <span class=\"comment\">/*parent*/</span>);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (savedInstanceState != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">        Parcelable p = savedInstanceState.getParcelable(FRAGMENTS_TAG);<span class=\"comment\">//获取保存的数据</span></span><br><span class=\"line\">        mFragments.restoreSaveState(p);<span class=\"comment\">//对数据进行了恢复</span></span><br><span class=\"line\">        <span class=\"comment\">// do something............</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// do something............</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    mFragmentLifecycleRegistry.handleLifecycleEvent(Lifecycle.Event.ON_CREATE);</span><br><span class=\"line\">    mFragments.dispatchCreate();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><p>具体保存操作是怎么操作的这个，自己去研究，不在本篇文章讨论范围</p>\n<p>涉及到<code>FragmentManager</code>对<code>fragment</code>的<code>onSaveInstanceState</code>和<code>onRestoreInstanceState</code>的层层调用</p>\n<p>我们来看看一个Fragment到底保存了一些什么东西（以下我只保留了关键函数）</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">final</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FragmentState</span> <span class=\"keyword\">implements</span> <span class=\"title\">Parcelable</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">final</span> String mClassName;</span><br><span class=\"line\">    <span class=\"keyword\">final</span> String mWho;</span><br><span class=\"line\">    <span class=\"keyword\">final</span> <span class=\"keyword\">boolean</span> mFromLayout;</span><br><span class=\"line\">    <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> mFragmentId;</span><br><span class=\"line\">    <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> mContainerId;</span><br><span class=\"line\">    <span class=\"keyword\">final</span> String mTag;</span><br><span class=\"line\">    <span class=\"keyword\">final</span> <span class=\"keyword\">boolean</span> mRetainInstance;</span><br><span class=\"line\">    <span class=\"keyword\">final</span> <span class=\"keyword\">boolean</span> mRemoving;</span><br><span class=\"line\">    <span class=\"keyword\">final</span> <span class=\"keyword\">boolean</span> mDetached;</span><br><span class=\"line\">    <span class=\"keyword\">final</span> Bundle mArguments;</span><br><span class=\"line\">    <span class=\"keyword\">final</span> <span class=\"keyword\">boolean</span> mHidden;</span><br><span class=\"line\">    <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> mMaxLifecycleState;</span><br><span class=\"line\"></span><br><span class=\"line\">    Bundle mSavedFragmentState;</span><br><span class=\"line\"></span><br><span class=\"line\">    Fragment mInstance;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//传入fragment对数据进行构造</span></span><br><span class=\"line\">    FragmentState(Fragment frag) &#123;</span><br><span class=\"line\">        mClassName = frag.getClass().getName();<span class=\"comment\">//类名</span></span><br><span class=\"line\">        mWho = frag.mWho;<span class=\"comment\">//这个fragment对象独有的id</span></span><br><span class=\"line\">        mFromLayout = frag.mFromLayout;<span class=\"comment\">//是否是直接从布局实例化的（boolean）</span></span><br><span class=\"line\">        mFragmentId = frag.mFragmentId;<span class=\"comment\">//若是动态添加的，则为容器id，从视图添加则为布局中的id</span></span><br><span class=\"line\">        mContainerId = frag.mContainerId;<span class=\"comment\">//动态添加时，容器的id</span></span><br><span class=\"line\">        mTag = frag.mTag;</span><br><span class=\"line\">        <span class=\"comment\">//这个属性有些复杂，如果fragment设置这个属性那么</span></span><br><span class=\"line\">        <span class=\"comment\">//这个fragment会被存到FragmentManagerViewModel里，</span></span><br><span class=\"line\">        <span class=\"comment\">//这个viewModel的owner是FragmentManager依附的Activity</span></span><br><span class=\"line\">        <span class=\"comment\">//由于ViewModel的特性，activity配置更改后viewModel会自动保存</span></span><br><span class=\"line\">        <span class=\"comment\">//下一次FragmentManager恢复数据时会优先判断判断FragmentManagerViewModel</span></span><br><span class=\"line\">        <span class=\"comment\">//里是否保存，如果保存了就不调用下面的instantiate创建新的Fragment对象</span></span><br><span class=\"line\">        mRetainInstance = frag.mRetainInstance;</span><br><span class=\"line\">        mRemoving = frag.mRemoving;<span class=\"comment\">//是否从activity中移除</span></span><br><span class=\"line\">        mDetached = frag.mDetached;<span class=\"comment\">//是否被禁用，当被detach时会被设置为false</span></span><br><span class=\"line\">        mArguments = frag.mArguments;<span class=\"comment\">//这个是个Bundle，用来传递东西的</span></span><br><span class=\"line\">        mHidden = frag.mHidden;<span class=\"comment\">//当前Fragment是否时隐藏状态</span></span><br><span class=\"line\">        mMaxLifecycleState = frag.mMaxState.ordinal();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//通过保存的信息恢复一个完整的Fragment</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> Fragment <span class=\"title\">instantiate</span><span class=\"params\">(@NonNull ClassLoader classLoader,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">            @NonNull FragmentFactory factory)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (mInstance == <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (mArguments != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">                mArguments.setClassLoader(classLoader);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            mInstance = factory.instantiate(classLoader, mClassName);</span><br><span class=\"line\">            mInstance.setArguments(mArguments);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (mSavedFragmentState != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">                mSavedFragmentState.setClassLoader(classLoader);</span><br><span class=\"line\">                mInstance.mSavedFragmentState = mSavedFragmentState;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                <span class=\"comment\">// When restoring a Fragment, always ensure we have a</span></span><br><span class=\"line\">                <span class=\"comment\">// non-null Bundle so that developers have a signal for</span></span><br><span class=\"line\">                <span class=\"comment\">// when the Fragment is being restored</span></span><br><span class=\"line\">                mInstance.mSavedFragmentState = <span class=\"keyword\">new</span> Bundle();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            mInstance.mWho = mWho;</span><br><span class=\"line\">            mInstance.mFromLayout = mFromLayout;</span><br><span class=\"line\">            mInstance.mRestored = <span class=\"keyword\">true</span>;</span><br><span class=\"line\">            mInstance.mFragmentId = mFragmentId;</span><br><span class=\"line\">            mInstance.mContainerId = mContainerId;</span><br><span class=\"line\">            mInstance.mTag = mTag;</span><br><span class=\"line\">            mInstance.mRetainInstance = mRetainInstance;</span><br><span class=\"line\">            mInstance.mRemoving = mRemoving;</span><br><span class=\"line\">            mInstance.mDetached = mDetached;</span><br><span class=\"line\">            mInstance.mHidden = mHidden;</span><br><span class=\"line\">            mInstance.mMaxState = Lifecycle.State.values()[mMaxLifecycleState];</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (FragmentManagerImpl.DEBUG) &#123;</span><br><span class=\"line\">                Log.v(FragmentManagerImpl.TAG, <span class=\"string\">\"Instantiated fragment \"</span> + mInstance);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> mInstance;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><p>从上面的代码注释就可以看出，保存了哪些东西</p>\n<p>看来这个解答时正解，哦耶<img src=\"/2020/03/27/%E5%BD%93Activity%E5%BC%82%E5%B8%B8%E9%94%80%E6%AF%81FragmentManager%E5%81%9A%E4%BA%86%E4%BB%80%E4%B9%88/v2-56d8e6cc72c947ee95df5a1a7bff9fc2_hd-1571843375376.jpg\" alt=\"img\" style=\"zoom:50%;\"></p>\n","prev":{"title":"类加载和类加载器","link":"2020/04/01/类加载和类加载器"},"next":{"title":"kotlin的let、with、run、apply、also系列方法记录","link":"2020/03/27/kotlin的let、with、run、apply、also系列方法记录"},"plink":"https://treeeeeeee.github.io/2020/03/27/当Activity异常销毁FragmentManager做了什么/","toc":[{"id":"问题出现可能的原因","title":"问题出现可能的原因","index":"1","children":[{"id":"fragmentmanager生命周期更长？？？","title":"FragmentManager生命周期更长？？？","index":"1.1"},{"id":"被恢复了？？","title":"被恢复了？？","index":"1.2"}]}]}