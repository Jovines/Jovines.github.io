{"title":"基于酷q平台的管理机器人","date":"2019-10-01T12:15:14.000Z","date_formatted":{"ll":"Oct 1, 2019","L":"10/01/2019","MM-DD":"10-01"},"link":"2019/10/01/基于酷q平台的管理机器人","comments":true,"tags":["世界这么大，当然要多去看看"],"categories":["兴趣"],"updated":"2019-12-30T03:16:47.531Z","content":"<h2 id=\"酷q机器人\">酷Q机器人<a href=\"#酷q机器人\" title=\"酷Q机器人\"></a></h2><hr>\n<p><strong>自从samrtQQ下线之后，很多QQ机器人都失效了。</strong></p>\n<p><strong>但是最近又比较想用这样一个机器人来管理减轻自己的一些工作，于是千方百计的我发现了酷Q。</strong></p>\n<p><strong>这里附上<a href=\"https://cqp.cc/\" target=\"_blank\">官网链接</a></strong></p>\n<h3 id=\"开发以及注意事项\">开发以及注意事项<a href=\"#开发以及注意事项\" title=\"开发以及注意事项\"></a></h3><ol><li><h5 id=\"sdk的选择\">SDK的选择<a href=\"#sdk的选择\" title=\"SDK的选择\"></a></h5><p>酷q提供了多种<a href=\"https://cqp.cc/t/15124\" target=\"_blank\">SDK</a>但是都是我不常用的，官方的支持的SDK是E语言，这语言emmmm好，都好，写，都可以写。虽然提供了java的sdk但是java版本始终不是正统，咬牙学了一天E语言，最后还是吐了。没办法，不习惯，没说E语言不好。害，最后还是选择的java版本。不过但是还没开始使用的时候我看到了更加好用的一个找到一个更加好用方便的SDK-<a href=\"https://github.com/HyDevelop/PicqBotX\" target=\"_blank\">PicqBotX</a>，这是通过http的插件来与酷q的程序交互。虽然不能像官方网站上提供的那个那样可以直接打包成jar运行但是个人认为开发更加简单。</p></li><li><p><strong>环境以及配置细节</strong></p><p><a href=\"https://github.com/HyDevelop/PicqBotX\" target=\"_blank\">这里讲得很清楚，以下说明几个坑</a>：</p><ul><li><p>如果使用kotlin代替java进行开发，请最好使用Gradle对项目进行管理，它对kotlin有更加完美的支持。</p></li><li><p><img src=\"/2019/10/01/%E5%9F%BA%E4%BA%8E%E9%85%B7q%E5%B9%B3%E5%8F%B0%E7%9A%84%E7%AE%A1%E7%90%86%E6%9C%BA%E5%99%A8%E4%BA%BA/酷q配置坏境的注意事项.jpg\"></p><p>在介绍readme中的这个位置一定要看准，下载对应版本的工具，否则可能出问题，比较麻烦，而且没有提示难以排查。</p></li><li><p>两个端口号一定要对应于你程序中的机器人的端口号否则会链接失败（建议直接用默认的31091 31092，也可自己选择）</p></li></ul></li></ol><h3 id=\"本人开发流程\">本人开发流程<a href=\"#本人开发流程\" title=\"本人开发流程\"></a></h3><ol><li><p>使用idea新建项目选择gradle管理项目<img src=\"/2019/10/01/%E5%9F%BA%E4%BA%8E%E9%85%B7q%E5%B9%B3%E5%8F%B0%E7%9A%84%E7%AE%A1%E7%90%86%E6%9C%BA%E5%99%A8%E4%BA%BA/idea新建项目.png\">java版本任意，需要kotlin开发勾选kotlin</p></li><li><p>导包</p></li></ol><p><img src=\"/2019/10/01/%E5%9F%BA%E4%BA%8E%E9%85%B7q%E5%B9%B3%E5%8F%B0%E7%9A%84%E7%AE%A1%E7%90%86%E6%9C%BA%E5%99%A8%E4%BA%BA/导包.png\" class=\"φcy\"></p>\n<p>   导入最新的sdk。</p>\n<ol><li><p>根据需要复制示例代码更改</p></li></ol><h3 id=\"个人实现效果和功能\">个人实现效果和功能<a href=\"#个人实现效果和功能\" title=\"个人实现效果和功能\"></a></h3><ul><li><p>通知功能</p><img src=\"/2019/10/01/%E5%9F%BA%E4%BA%8E%E9%85%B7q%E5%B9%B3%E5%8F%B0%E7%9A%84%E7%AE%A1%E7%90%86%E6%9C%BA%E5%99%A8%E4%BA%BA/通知.jpg\" style=\"zoom:50%\"></li><li><p>请假功能</p><p>有学生请假则会以json格式文本保存在服务器（或者本地）</p><img src=\"/2019/10/01/%E5%9F%BA%E4%BA%8E%E9%85%B7q%E5%B9%B3%E5%8F%B0%E7%9A%84%E7%AE%A1%E7%90%86%E6%9C%BA%E5%99%A8%E4%BA%BA/请假.jpg\" style=\"zoom:33%\"></li><li><p>导出请假表格文档，会直接给下载链接</p><img src=\"/2019/10/01/%E5%9F%BA%E4%BA%8E%E9%85%B7q%E5%B9%B3%E5%8F%B0%E7%9A%84%E7%AE%A1%E7%90%86%E6%9C%BA%E5%99%A8%E4%BA%BA/请假文档.jpg\" style=\"zoom:50%\"></li><li><p>补登请假</p><img src=\"/2019/10/01/%E5%9F%BA%E4%BA%8E%E9%85%B7q%E5%B9%B3%E5%8F%B0%E7%9A%84%E7%AE%A1%E7%90%86%E6%9C%BA%E5%99%A8%E4%BA%BA/补登请假.jpg\" style=\"zoom:50%\"></li><li><p>还有安卓端的管理app和网页版实时查看数据。</p></li></ul><h3 id=\"部署机器人\">部署机器人<a href=\"#部署机器人\" title=\"部署机器人\"></a></h3><p><strong>在winows server上部署</strong></p>\n<p>太简单了，省略具体步骤，总结解释就是以下步骤：</p>\n<ul><li>电脑上安装上所有酷q，http插件，java所需要的环境，跟你的本地一样（本地会配置，我想server上配置也难不倒聪明的你）</li><li>打包你的机器人，可以是jar可以是其他的，只要是能够将你的代码打包运行就好</li><li>运行酷q，打开http插件，运行你的机器人。</li></ul><p><strong>在linux上部署</strong></p>\n<p>因为酷q是window程序，要想在linux上部署那就必须得使用docker（不知道docker是什么的请百度），由于不是专业运维方向对docker不是很了解，也踩了很多坑。</p>\n<p>这里附上http插件的<a href=\"https://cqhttp.cc/docs\" target=\"_blank\">官方教程</a>，里面有详细的描述如何安装最新的酷q的docker镜像，如果docker还没安装自行百度安装你的服务器的docker。</p>\n<p>然后基本上和以上步骤都是差不多，但是有个地方需要注意</p>\n<p><img src=\"/2019/10/01/%E5%9F%BA%E4%BA%8E%E9%85%B7q%E5%B9%B3%E5%8F%B0%E7%9A%84%E7%AE%A1%E7%90%86%E6%9C%BA%E5%99%A8%E4%BA%BA/image-20191113001251371.png\" class=\"φcy\" alt=\"image-20191113001251371\"></p>\n<p>这里的上报地址，理所当然就是酷q接收到消息之后传递给你的程序去处理，但是在docker中利用127.0.0.1是访问的docker内部，而你的机器人程序并不是在docker内所以，酷q是无法将消息上报给你的机器人的，有以下解决方案：</p>\n<ul><li><p>对于mac和windows可以使用host.docker.internal替换127.0.0.1</p></li><li><p>对于Linux可以创建一个桥接网络(我在网络上查找的，自己在centos上没有尝试成功)<br>下面的localNet是网络名字,可自行修改;关于192.168.0.0这个子网,也可以自行定义.<br>默认按照下面的命令,执行后将可以通过192.168.0.1访问宿主机</p><p><code>docker network create -d bridge --subnet 192.168.0.0/24 --gateway 192.168.0.1 localNet</code></p></li><li><p>若你是在你的服务器上部署的你的机器人，可以直接使用服务器的公网ip</p></li></ul><p>只有这样酷q才能将消息上报到你的机器人处理,否则你的机器人只能发送消息，不能接收消息并作出反应。</p>\n<h3 id=\"用到的库\">用到的库<a href=\"#用到的库\" title=\"用到的库\"></a></h3><hr>\n<ul><li>阿帕奇的表格框架</li><li>gson</li></ul><p>通知管理机器人源代码地址：<a>冷漠无情的机器人</a></p>\n<p>因为源代码中有不少私人数据，所以取消。</p>\n","prev":{"title":"完美的hexo中插入图片的解决方案","link":"2019/10/01/hexo下完美插入图片"},"plink":"https://treeeeeeee.github.io/2019/10/01/基于酷q平台的管理机器人/","toc":[{"id":"酷q机器人","title":"酷Q机器人","index":"1","children":[{"id":"开发以及注意事项","title":"开发以及注意事项","index":"1.1"},{"id":"本人开发流程","title":"本人开发流程","index":"1.2"},{"id":"个人实现效果和功能","title":"个人实现效果和功能","index":"1.3"},{"id":"部署机器人","title":"部署机器人","index":"1.4"},{"id":"用到的库","title":"用到的库","index":"1.5"}]}]}