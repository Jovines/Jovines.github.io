[{"title":"基于酷q平台的管理机器人","date":"2019-10-01T12:15:14.000Z","updated":"2019-10-01T13:43:20.345Z","content":"酷Q机器人\n自从samrtQQ下线之后，很多QQ机器人都失效了。\n但是最近又比较想用这样一个机器人来管理减轻自己的一些工作，于是千方百计的我发现了酷Q。\n这里附上官网链接\n开发以及注意事项\n\nSDK的选择酷q提供了多种SDK但是都是我不常用的，官方的支持的SDK是E语言，这语言emmmm好，都好，写，都可以写。虽然提供了java的sdk但是java版本始终不是正统，咬牙学了一天E语言，最后还是吐了。没办法，不习惯，没说E语言不好。害，最后还是选择的java版本。不过但是还没开始使用的时候我看到了更加好用的一个找到一个更加好用方便的SDK-PicqBotX，这是通过http的插件来与酷q的程序交互。虽然不能像官方网站上提供的那个那样可以直接打包成jar运行但是个人认为开发更加简单。\n\n环境以及配置细节\n这里讲得很清楚，以下说明几个坑：\n\n如果使用kotlin代替java进行开发，请最好使用Gradle对项目进行管理，它对kotlin有更加完美的支持。\n\n\n在介绍readme中的这个位置一定要看准，下载对应版本的工具，否则可能出问题，比较麻烦，而且没有提示难以排查。\n\n两个端口号一定要对应于你程序中的机器人的端口号否则会链接失败（建议直接用默认的31091 31092，也可自己选择）\n\n\n\n\n本人开发流程\n\n使用idea新建项目选择gradle管理项目java版本任意，需要kotlin开发勾选kotlin\n\n导包\n\n导入最新的sdk。\n\n根据需要复制示例代码更改\n1234567891011121314151617181920212223242526272829303132public class TestBot&#123;    public static void main(String[] args)    &#123;        // 创建机器人对象 ( 传入配置 )        PicqBotX bot = new PicqBotX(new PicqConfig(31092).setDebug(true));        // 添加一个机器人账户 ( 名字, 发送URL, 发送端口 )        bot.addAccount(\"Bot01\", \"127.0.0.1\", 31091);        // 注册事件监听器, 可以注册多个监听器        bot.getEventManager().registerListeners(                new TestListener(),                 new RequestListener(),                new ExceptionListener()        );        // 启用指令管理器        // 这些字符串是指令前缀, 比如指令\"!help\"的前缀就是\"!\"        bot.enableCommandManager(\"bot -\", \"!\", \"/\", \"~\");        // 注册指令, 可以注册多个指令        bot.getCommandManager().registerCommands(                new CommandSay(),                new CommandTest(),                new CommandVersion()        );        // 启动机器人, 不会占用主线程        bot.startBot();    &#125;&#125;\n\n\n\n个人实现效果和功能\n通知功能\n\n\n请假功能\n有学生请假则会以json格式文本保存在服务器（或者本地）\n\n\n导出请假表格文档，会直接给下载链接\n\n\n补登请假\n\n\n还有安卓端的管理app和网页版实时查看数据。\n\n\n用到的库\n\n阿帕奇的表格框架\ngson\n\n通知管理机器人源代码地址：冷漠无情的机器人\n因为源代码中有不少私人数据，所以取消。\n","plink":"https://treeeeeeee.github.io/2019/10/01/基于酷q平台的管理机器人/"}]